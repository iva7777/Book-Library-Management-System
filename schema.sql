-- Creating the APP_USER table
CREATE TABLE APP_USER (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    USERNAME VARCHAR(20) NOT NULL,
    PASSWORD VARCHAR(20) NOT NULL,
    ROLE ENUM('reader', 'librarian') NOT NULL
);

-- Creating the READER table
CREATE TABLE READER (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    FIRST_NAME VARCHAR(30) NOT NULL,
    LAST_NAME VARCHAR(30) NOT NULL,
    PHONE VARCHAR(15),
    ADDRESS VARCHAR(80),
    EMAIL VARCHAR(255),
    APP_USER_ID INT,
    FOREIGN KEY (APP_USER_ID) REFERENCES APP_USER(ID)
);

-- Creating the BOOK table
CREATE TABLE BOOK (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    TITLE VARCHAR(30) NOT NULL,
    STATUS ENUM('available', 'borrowed', 'discarded') NOT NULL,
    YEAR_OF_PRODUCTION INT,
    ISBN VARCHAR(15),
    GENRE VARCHAR(20),
    PUBLISHER VARCHAR(20),
    DESCRIPTION VARCHAR(255)
);

-- Creating the AUTHOR table
CREATE TABLE AUTHOR (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    FIRST_NAME VARCHAR(30) NOT NULL,
    LAST_NAME VARCHAR(30) NOT NULL,
    BIO VARCHAR(255)
);

-- Creating the AUTHOR_BOOK table (junction table for many-to-many relationship)
CREATE TABLE AUTHOR_BOOK (
    AUTHOR_ID INT NOT NULL,
    BOOK_ID INT NOT NULL,
    CREATION_DATE TIMESTAMP,
    PRIMARY KEY (AUTHOR_ID, BOOK_ID),
    FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHOR(ID),
    FOREIGN KEY (BOOK_ID) REFERENCES BOOK(ID)
);

-- Creating the READER_CARD table
CREATE TABLE READER_CARD (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    READER_ID INT NOT NULL,
    RENT_BOOK_ID INT NOT NULL,
    RENT_DATE DATE,
    RETURN_DATE DATE,
    FOREIGN KEY (READER_ID) REFERENCES READER(ID),
    FOREIGN KEY (RENT_BOOK_ID) REFERENCES BOOK(ID)
);
